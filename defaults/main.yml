# General configuration
etcd_version: 3.2.24
etcd_ansible_group: etcd_nodes
etcd_ssl_enabled: yes
etcd_pod_install: no

# Service configuration
etcd_client_listen_ip: 0.0.0.0
etcd_peer_listen_ip: 0.0.0.0
etcd_hostname: "{{ ansible_hostname }}"

# Local installation configuration
etcd_archive_checksum: sha256:947849dbcfa13927c81236fb76a7c01d587bbab42ab1e807184cd91b026ebed7
etcd_base_name: etcd-v{{ etcd_version }}-linux-amd64
etcd_archive: "{{ etcd_base_name }}.tar.gz"

# Kubernetes pod configuration
kube_docker_registry: k8s.gcr.io
etcd_docker_revision: 1
etcd_cpulimit: 500m

# SSL configuration
ca_host: ca
ca_dir: /etc/pki/CA/intermediate
ca_host_cert: "{{ ca_dir }}/certs/intermediate-chain.crt"

etcd_private_key: /etc/etcd/{{ etcd_hostname }}-key.pem
etcd_cert: /etc/etcd/{{ etcd_hostname }}.crt
etcd_ca_cert: /etc/etcd/ca.crt
etcd_cert_country: GB
etcd_cert_city: London
etcd_cert_state: Greater London
etcd_cert_organization_name: Ansible Certificate Authority
etcd_cert_organizational_unit_name: etcd

# Derived configuration
etcd_client_local_ip: "{{ '127.0.0.1' if etcd_client_listen_ip == '0.0.0.0' else etcd_client_listen_ip }}"
etcd_protocol: "{{ 'https' if etcd_ssl_enabled else 'http' }}"
etcd_single_node: "{{ groups[etcd_ansible_group]|length <= 1 }}"
etcd_image_name: "{{ kube_docker_registry }}/etcd"
etcd_image_version: "{{ etcd_version }}-{{ etcd_docker_revision }}"
